### Variables
@baseUrl = http://localhost:3000
@contentType = application/json

### 1. Registrar un nuevo usuario
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "username": "usuario_test",
  "password": "password123"
}

### 2. Registrar otro usuario para pruebas
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "username": "admin_user",
  "password": "admin123"
}

### 3. Login con credenciales válidas
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "username": "usuario_test",
  "password": "password123"
}

### 4. Login con credenciales inválidas (usuario incorrecto)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "username": "usuario_inexistente",
  "password": "password123"
}

### 5. Login con credenciales inválidas (contraseña incorrecta)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "username": "usuario_test",
  "password": "contraseña_incorrecta"
}

### 6. Login con datos faltantes (sin username)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "password": "password123"
}

### 7. Login con datos faltantes (sin password)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "username": "usuario_test"
}

### 8. Login con datos faltantes (ambos vacíos)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "username": "",
  "password": ""
}

### 9. Registrar usuario duplicado (debería fallar)
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "username": "usuario_test",
  "password": "otra_contraseña"
}

### 10. Registrar usuario sin username
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "password": "password123"
}

### 11. Registrar usuario sin password
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "username": "nuevo_usuario"
}

### 12. Registrar usuario con datos vacíos
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "username": "",
  "password": ""
}

### 13. Logout
POST {{baseUrl}}/auth/logout
Content-Type: {{contentType}}

### 14. Verificar que las cookies se están enviando correctamente
GET {{baseUrl}}/auth/profile
Cookie: access_token=tu_token_aqui

### Notas importantes:
# 1. El servidor está configurado para usar cookies HTTP-only para el token JWT
# 2. Las cookies se configuran automáticamente después del login exitoso
# 3. El token JWT expira en 1 hora (3600 segundos)
# 4. Para probar endpoints protegidos, necesitarás copiar el token de la respuesta del login
# 5. El endpoint de logout está pendiente de implementación según el código
# 6. El servidor corre en el puerto 3000 por defecto
